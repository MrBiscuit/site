// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: qDNA17RfdgsM73kkELPPxa
// Component: j-zq1RSVcV
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import UnStyledPaginationItem from "../../UnStyledPaginationItem"; // plasmic-import: chyRgv30hi/component
import UnstyledDropdown from "../../UnstyledDropdown"; // plasmic-import: zQM7IHkPTi/component

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_outline_to_single_stroke_css from "../outline_to_single_stroke/plasmic_outline_to_single_stroke.module.css"; // plasmic-import: 56iVbBJXbx9hFxysoAGHJC/projectcss
import projectcss from "../pro_layout_panel_landing_pgae/plasmic_pro_layout_panel_landing_pgae.module.css"; // plasmic-import: qDNA17RfdgsM73kkELPPxa/projectcss
import sty from "./PlasmicUnStyledPagination.module.css"; // plasmic-import: j-zq1RSVcV/css

import Icon40Icon from "./icons/PlasmicIcon__Icon40"; // plasmic-import: lMOinApUC7/icon
import Icon55Icon from "./icons/PlasmicIcon__Icon55"; // plasmic-import: FFnEshjgff/icon
import Icon37Icon from "./icons/PlasmicIcon__Icon37"; // plasmic-import: WHV25Sv77u/icon

export type PlasmicUnStyledPagination__VariantMembers = {};

export type PlasmicUnStyledPagination__VariantsArgs = {};
type VariantPropType = keyof PlasmicUnStyledPagination__VariantsArgs;
export const PlasmicUnStyledPagination__VariantProps =
  new Array<VariantPropType>();

export type PlasmicUnStyledPagination__ArgsType = {};
type ArgPropType = keyof PlasmicUnStyledPagination__ArgsType;
export const PlasmicUnStyledPagination__ArgProps = new Array<ArgPropType>();

export type PlasmicUnStyledPagination__OverridesType = {
  root?: p.Flex<"div">;
  prev?: p.Flex<typeof UnStyledPaginationItem>;
  first?: p.Flex<typeof UnStyledPaginationItem>;
  second?: p.Flex<typeof UnStyledPaginationItem>;
  third?: p.Flex<typeof UnStyledPaginationItem>;
  fourth?: p.Flex<typeof UnStyledPaginationItem>;
  fivth?: p.Flex<typeof UnStyledPaginationItem>;
  unStyledPaginationItem?: p.Flex<typeof UnStyledPaginationItem>;
  ten?: p.Flex<typeof UnStyledPaginationItem>;
  next?: p.Flex<typeof UnStyledPaginationItem>;
  unstyledDropdown?: p.Flex<typeof UnstyledDropdown>;
};

export interface DefaultUnStyledPaginationProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicUnStyledPagination__RenderFunc(props: {
  variants: PlasmicUnStyledPagination__VariantsArgs;
  args: PlasmicUnStyledPagination__ArgsType;
  overrides: PlasmicUnStyledPagination__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_outline_to_single_stroke_css.plasmic_tokens,
        sty.root
      )}
    >
      <UnStyledPaginationItem
        data-plasmic-name={"prev"}
        data-plasmic-override={overrides.prev}
        className={classNames("__wab_instance", sty.prev)}
      />

      <UnStyledPaginationItem
        data-plasmic-name={"first"}
        data-plasmic-override={overrides.first}
        className={classNames("__wab_instance", sty.first)}
      >
        {true ? (
          <div className={classNames(projectcss.all, sty.freeBox__o18B)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___3EIgT
              )}
            >
              {"1"}
            </div>
          </div>
        ) : null}
      </UnStyledPaginationItem>

      <UnStyledPaginationItem
        data-plasmic-name={"second"}
        data-plasmic-override={overrides.second}
        className={classNames("__wab_instance", sty.second)}
      >
        {true ? (
          <div className={classNames(projectcss.all, sty.freeBox__w4N8G)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__ld0LX
              )}
            >
              {"2"}
            </div>
          </div>
        ) : null}
      </UnStyledPaginationItem>

      <UnStyledPaginationItem
        data-plasmic-name={"third"}
        data-plasmic-override={overrides.third}
        className={classNames("__wab_instance", sty.third)}
      >
        <div className={classNames(projectcss.all, sty.freeBox__a9VWe)}>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__fWo73
            )}
          >
            {"3"}
          </div>
        </div>
      </UnStyledPaginationItem>

      <UnStyledPaginationItem
        data-plasmic-name={"fourth"}
        data-plasmic-override={overrides.fourth}
        className={classNames("__wab_instance", sty.fourth)}
      >
        <div className={classNames(projectcss.all, sty.freeBox__aVFh)}>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__eM1S6
            )}
          >
            {"4"}
          </div>
        </div>
      </UnStyledPaginationItem>

      <UnStyledPaginationItem
        data-plasmic-name={"fivth"}
        data-plasmic-override={overrides.fivth}
        className={classNames("__wab_instance", sty.fivth)}
      >
        <div className={classNames(projectcss.all, sty.freeBox__eA3Gc)}>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__mmtbb
            )}
          >
            {"5"}
          </div>
        </div>
      </UnStyledPaginationItem>

      <UnStyledPaginationItem
        data-plasmic-name={"unStyledPaginationItem"}
        data-plasmic-override={overrides.unStyledPaginationItem}
        className={classNames("__wab_instance", sty.unStyledPaginationItem)}
      >
        <Icon55Icon
          className={classNames(projectcss.all, sty.svg__bV0We)}
          role={"img"}
        />
      </UnStyledPaginationItem>

      <UnStyledPaginationItem
        data-plasmic-name={"ten"}
        data-plasmic-override={overrides.ten}
        className={classNames("__wab_instance", sty.ten)}
      >
        <div className={classNames(projectcss.all, sty.freeBox__tQyRy)}>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__txBm1
            )}
          >
            {"10"}
          </div>
        </div>
      </UnStyledPaginationItem>

      <UnStyledPaginationItem
        data-plasmic-name={"next"}
        data-plasmic-override={overrides.next}
        className={classNames("__wab_instance", sty.next)}
      >
        <Icon40Icon
          className={classNames(projectcss.all, sty.svg___1YMrB)}
          role={"img"}
        />
      </UnStyledPaginationItem>

      <UnstyledDropdown
        data-plasmic-name={"unstyledDropdown"}
        data-plasmic-override={overrides.unstyledDropdown}
        className={classNames("__wab_instance", sty.unstyledDropdown)}
      >
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__iXxVa
          )}
        >
          {"10 items / page"}
        </div>
      </UnstyledDropdown>
    </p.Stack>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "prev",
    "first",
    "second",
    "third",
    "fourth",
    "fivth",
    "unStyledPaginationItem",
    "ten",
    "next",
    "unstyledDropdown"
  ],
  prev: ["prev"],
  first: ["first"],
  second: ["second"],
  third: ["third"],
  fourth: ["fourth"],
  fivth: ["fivth"],
  unStyledPaginationItem: ["unStyledPaginationItem"],
  ten: ["ten"],
  next: ["next"],
  unstyledDropdown: ["unstyledDropdown"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  prev: typeof UnStyledPaginationItem;
  first: typeof UnStyledPaginationItem;
  second: typeof UnStyledPaginationItem;
  third: typeof UnStyledPaginationItem;
  fourth: typeof UnStyledPaginationItem;
  fivth: typeof UnStyledPaginationItem;
  unStyledPaginationItem: typeof UnStyledPaginationItem;
  ten: typeof UnStyledPaginationItem;
  next: typeof UnStyledPaginationItem;
  unstyledDropdown: typeof UnstyledDropdown;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicUnStyledPagination__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicUnStyledPagination__VariantsArgs;
    args?: PlasmicUnStyledPagination__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicUnStyledPagination__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicUnStyledPagination__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicUnStyledPagination__ArgProps,
          internalVariantPropNames: PlasmicUnStyledPagination__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicUnStyledPagination__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicUnStyledPagination";
  } else {
    func.displayName = `PlasmicUnStyledPagination.${nodeName}`;
  }
  return func;
}

export const PlasmicUnStyledPagination = Object.assign(
  // Top-level PlasmicUnStyledPagination renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    prev: makeNodeComponent("prev"),
    first: makeNodeComponent("first"),
    second: makeNodeComponent("second"),
    third: makeNodeComponent("third"),
    fourth: makeNodeComponent("fourth"),
    fivth: makeNodeComponent("fivth"),
    unStyledPaginationItem: makeNodeComponent("unStyledPaginationItem"),
    ten: makeNodeComponent("ten"),
    next: makeNodeComponent("next"),
    unstyledDropdown: makeNodeComponent("unstyledDropdown"),

    // Metadata about props expected for PlasmicUnStyledPagination
    internalVariantProps: PlasmicUnStyledPagination__VariantProps,
    internalArgProps: PlasmicUnStyledPagination__ArgProps
  }
);

export default PlasmicUnStyledPagination;
/* prettier-ignore-end */
