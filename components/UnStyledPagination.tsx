// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import * as React from "react";
import {
  PlasmicUnStyledPagination,
  DefaultUnStyledPaginationProps
} from "./plasmic/mr_biscuit_site/PlasmicUnStyledPagination";
import { HTMLElementRefOf } from "@plasmicapp/react-web";

// Your component props start with props for variants and slots you defined
// in Plasmic, but you can add more here, like event handlers that you can
// attach to named nodes in your component.
//
// If you don't want to expose certain variants or slots as a prop, you can use
// Omit to hide them:
//
// interface UnStyledPaginationProps extends Omit<DefaultUnStyledPaginationProps, "hideProps1"|"hideProp2"> {
//   // etc.
// }
//
// You can also stop extending from DefaultUnStyledPaginationProps altogether and have
// total control over the props for your component.
export interface UnStyledPaginationProps
  extends DefaultUnStyledPaginationProps {}

function UnStyledPagination_(
  props: UnStyledPaginationProps,
  ref: HTMLElementRefOf<"div">
) {
  // Use PlasmicUnStyledPagination to render this component as it was
  // designed in Plasmic, by activating the appropriate variants,
  // attaching the appropriate event handlers, etc.  You
  // can also install whatever React hooks you need here to manage state or
  // fetch data.
  //
  // Props you can pass into PlasmicUnStyledPagination are:
  // 1. Variants you want to activate,
  // 2. Contents for slots you want to fill,
  // 3. Overrides for any named node in the component to attach behavior and data,
  // 4. Props to set on the root node.
  //
  // By default, we are just piping all UnStyledPaginationProps here, but feel free
  // to do whatever works for you.
  const [current, setCurrent] = React.useState(1);
  return (
    <PlasmicUnStyledPagination
      root={{ ref }}
      prev={{
        props: {
          onClick: () => {
            if (current > 1)
            setCurrent(current - 1);
          },
          isDisabled: current === 1,
        },
      }}
      first={{
        props: {
          onClick: () => {
            setCurrent(1);
          },
          isCurrent: current === 1,
        },
      }}
      second={{
        props: {
          onClick: () => {
            setCurrent(2);
          },
          isCurrent: current === 2,
        },
      }}
      third={{
        props: {
          onClick: () => {
            setCurrent(3);
          },
          isCurrent: current === 3,
        },
      }}
      fourth={{
        props: {
          onClick: () => {
            setCurrent(4);
          },
          isCurrent: current === 4,
        },
      }}
      fivth={{
        props: {
          onClick: () => {
            setCurrent(5);
          },
          isCurrent: current === 5,
        },
      }}
      ten={{
        props: {
          onClick: () => {
            setCurrent(6);
          },
          isCurrent: current === 6,
        },
      }}
      next={{
        props: {
          onClick: () => {
            if (current < 6)
            setCurrent(current + 1);
          },
          isDisabled: current === 6,
        },
      }}
      {...props}
    />
  );
}

const UnStyledPagination = React.forwardRef(UnStyledPagination_);
export default UnStyledPagination;
